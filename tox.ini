[tox]
envlist =
    clean,
    check,
    2.6,
    2.6-nocover,
    2.7,
    2.7-nocover,
    3.3,
    3.3-nocover,
    3.4,
    3.4-nocover,
    pypy,
    pypy-nocover,
    report,
    docs

[testenv]
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
usedevelop = true
deps =
    pytest
    pytest-capturelog
    pytest-cov
    -r{toxinidir}/docs/requirements.txt
whitelist_externals =
    2.6:  bash
# not sure about the quoting here but this seems to work...
commands =
    2.6:  bash -c \"find .tox -xdev -name "compat.py" | grep mirakuru | xargs sed -i 's|sys.version_info.major|sys.version_info[0]|'\"
    {posargs:py.test -vv --cov=src}

[testenv:spell]
# seems to depend on dictionary comprehensions in >= py27?
setenv =
    SPELLCHECK = 1
commands =
    sphinx-build -b spelling docs dist/docs
usedevelop = true
deps =
    sphinx
    sphinxcontrib-napoleon
    sphinx-py3doc-enhanced-theme
    sphinxcontrib-spelling
    pyenchant
#    -r{toxinidir}/docs/requirements.txt

[testenv:docs]
# seems to depend on dictionary comprehensions in >= py27?
whitelist_externals =
    rm
commands =
    rm -rf dist/docs || rmdir /S /Q dist\docs
    sphinx-build -b html docs dist/docs
    sphinx-build -b linkcheck docs dist/docs
usedevelop = true
deps =
    sphinx
    sphinxcontrib-napoleon
    sphinx-py3doc-enhanced-theme
#    -r{toxinidir}/docs/requirements.txt

[testenv:configure]
deps =
    jinja2
    matrix
usedevelop = true
commands =
    python bootstrap.py

[testenv:flake8]
deps =
    flake8
usedevelop = true
commands =
    flake8 src

[testenv:pep8]
deps =
    pep8
usedevelop = true
commands =
    pep8 src

[testenv:check]
basepython = python3.4
deps =
    docutils
    check-manifest
#    flake8
    collective.checkdocs
usedevelop = true
commands =
    python setup.py checkdocs
    python setup.py check --restructuredtext --strict --metadata
    check-manifest {toxinidir}
#    flake8 src

[testenv:coveralls]
deps =
    coveralls
usedevelop = true
commands =
    coverage combine
    coverage report
    coveralls

[testenv:report]
basepython = python3.4
commands =
    coverage combine
    coverage report
usedevelop = true
deps = coverage

[testenv:clean]
commands = coverage erase
usedevelop = true
deps = coverage

[testenv:2.6]
basepython = python2.6
setenv =
    {[testenv]setenv}
    WITH_COVERAGE=yes
deps =
    {[testenv]deps}

[testenv:2.6-nocover]
basepython = python2.6
deps =
    {[testenv]deps}

[testenv:2.7]
basepython = python2.7
setenv =
    {[testenv]setenv}
    WITH_COVERAGE=yes
deps =
    {[testenv]deps}

[testenv:2.7-nocover]
basepython = python2.7
deps =
    {[testenv]deps}

[testenv:3.3]
basepython = python3.3
setenv =
    {[testenv]setenv}
    WITH_COVERAGE=yes
deps =
    {[testenv]deps}

[testenv:3.3-nocover]
basepython = python3.3
deps =
    {[testenv]deps}

[testenv:3.4]
basepython = python3.4
setenv =
    {[testenv]setenv}
    WITH_COVERAGE=yes
deps =
    {[testenv]deps}

[testenv:3.4-nocover]
basepython = python3.4
deps =
    {[testenv]deps}

[testenv:pypy]
basepython = pypy
setenv =
    {[testenv]setenv}
    WITH_COVERAGE=yes
deps =
    {[testenv]deps}

[testenv:pypy-nocover]
basepython = pypy
deps =
    {[testenv]deps}



